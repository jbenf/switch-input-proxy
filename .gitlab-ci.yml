# This file is a template, and might need editing before it works on your project.
# To contribute improvements to CI/CD templates, please follow the Development guide at:
# https://docs.gitlab.com/ee/development/cicd/templates.html
# This specific template is located at:
# https://gitlab.com/gitlab-org/gitlab/-/blob/master/lib/gitlab/ci/templates/Getting-Started.gitlab-ci.yml

# This is a sample GitLab CI/CD configuration file that should run without any modifications.
# It demonstrates a basic 3 stage CI/CD pipeline. Instead of real tests or scripts,
# it uses echo commands to simulate the pipeline execution.
#
# A pipeline is composed of independent jobs that run scripts, grouped into stages.
# Stages run in sequential order, but jobs within stages run in parallel.
#
# For more information, see: https://docs.gitlab.com/ee/ci/yaml/index.html#stages

stages:          # List of stages for jobs, and their order of execution
  - build
  - test
  - deploy

image: python:3.9.2


lint-test-job:   # This job also runs in the test stage.
  stage: test    # It can run at the same time as unit-test-job (in parallel).
  allow_failure: true
  before_script:
    - pip install pylint
  script:
    - pylint input-proxy.py ./lib/*.py

.ssh:
  image: alpine:3.14
  before_script:
    - 'command -v ssh-agent >/dev/null || ( apk add --no-cache  openssh-client )'
    - eval $(ssh-agent -s)
    - echo "$DEPLOYMENT_SSH_KEY" | tr -d '\r' | ssh-add -
    - mkdir -p ~/.ssh
    - chmod 700 ~/.ssh
    - echo "$DEPLOYMENT_TARGET_ID" | tr -d '\r' >> ~/.ssh/known_hosts

deploy:
  stage: deploy
  extends: .ssh
  script:
    - ssh $DEPLOYMENT_TARGET bash -c "sudo systemctl stop input-proxy || true"
    - >
      ssh $DEPLOYMENT_TARGET bash <<EOF
        sudo systemctl stop input-proxy || true
        echo first command
        echo second command
        cd /data/input-proxy
        pwd
        git pull
      EOF
    - ssh $DEPLOYMENT_TARGET sudo systemctl start input-proxy
    - ssh $DEPLOYMENT_TARGET journalctl -u input-proxy -n 20

