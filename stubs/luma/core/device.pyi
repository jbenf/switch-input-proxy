from luma.core import mixin
from typing import Any

class device(mixin.capabilities):
    def __init__(self, const: Any | None = ..., serial_interface: Any | None = ...) -> None: ...
    def command(self, *cmd: str) -> None: ...
    def data(self, data) -> None: ...
    def show(self) -> None: ...
    def hide(self) -> None: ...
    def contrast(self, level) -> None: ...
    def cleanup(self) -> None: ...

class parallel_device(device):
    def __init__(self, const: Any | None = ..., serial_interface: Any | None = ..., exec_time: Any | None = ..., **kwargs) -> None: ...
    def command(self, *cmd, exec_time: Any | None = ..., only_low_bits: bool = ...) -> None: ...
    def data(self, data) -> None: ...

class dummy(device):
    image: Any
    def __init__(self, width: int = ..., height: int = ..., rotate: int = ..., mode: str = ..., **kwargs) -> None: ...
    def display(self, image) -> None: ...

class linux_framebuffer(device):
    id: Any
    bits_per_pixel: Any
    framebuffer: Any
    def __init__(self, device: Any | None = ..., framebuffer: Any | None = ..., bgr: bool = ..., **kwargs) -> None: ...
    def cleanup(self) -> None: ...
    def display(self, image) -> None: ...
