# from PIL import ImageFont
# from typing import Any

# class bitmap_font:
#     PUA_SPACE: int
#     mappings: Any
#     metrics: Any
#     def __init__(self) -> None: ...
#     def load(self, filename): ...
#     def loads(self, fontdata): ...
#     def load_pillow_font(self, file, mappings: Any | None = ...): ...
#     def load_sprite_table(self, sprite_table, index, xwidth, glyph_size, cell_size, mappings: Any | None = ...): ...
#     def save(self, filename) -> None: ...
#     def dumps(self): ...
#     def getsize(self, text, *args, **kwargs): ...
#     def getmask(self, text, mode: str = ..., *args, **kwargs): ...
#     def combine(self, source_font, characters: Any | None = ..., force: bool = ...) -> None: ...

# def load(filename): ...
# def loads(data): ...
# def load_pillow_font(filename, mappings: Any | None = ...): ...
# def load_sprite_table(sprite_table, index, xwidth, glyph_size, cell_size: Any | None = ..., mappings: Any | None = ...): ...

# class embedded_fonts(ImageFont.ImageFont):
#     data: Any
#     font_by_number: Any
#     names_index: Any
#     def __init__(self, data, selected_font: int = ...) -> None: ...
#     def load(self, val): ...
#     @property
#     def current(self): ...
#     font: Any
#     @current.setter
#     def current(self, val) -> None: ...
#     def combine(self, font, characters: Any | None = ..., force: bool = ...) -> None: ...
